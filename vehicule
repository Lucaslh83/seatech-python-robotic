from abc import ABCMeta, abstractmethod

class UnmannedVehicule():
    """  An autonomous vehicle have to do his mission automatically.
    This mission can be configured by an operator. """
    @abstractmethod
    def do_something_interesting(self):
        """"truc"""

class AerialVehicule():
    """ A vehicle made for ground fields."""
    def do_something_aerial_specific(self):
        print("AIR COMBAT ENGAGED")

class GroundVehicule():
    """ A vehicle made for ground fields."""
    def do_something_ground_specific(self):
        print("GROUND COMBAT ENGAGED")

class UnderseaVehicule():
    """ A vehicle made for ground fields."""
    def do_something_undersea_specific(self):
        print("UNDERSEA COMBAT ENGAGED")

class UAV(UnmannedVehicule,AerialVehicule,metaclass=ABCMeta):
    """Unmanned Aerial Vehicule"""
    def do_something_interesting(self):
        print("FLY AS HIGH AS YOU CAN")

class UUV(UnmannedVehicule,UnderseaVehicule,metaclass=ABCMeta):
    """Unmanned Undersea Vehicule"""
    def do_something_interesting(self):
        print("DIVE AS DEEP AS POSSIBLE")

class UGV(UnmannedVehicule,GroundVehicule,metaclass=ABCMeta):
    """Unmanned Ground Vehicule"""
    def do_something_interesting(self):
        print("RIDE AS FAR AS POSSIBLE")


uav = UAV()
uav.do_something_interesting()
uav.do_something_aerial_specific()
ugv = UGV()
ugv.do_something_interesting()
ugv.do_something_ground_specific()
uuv = UUV()
uuv.do_something_interesting()
uuv.do_something_undersea_specific()